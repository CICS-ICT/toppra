version: 2

jobs:
  check-codestyle:
    docker:
      - image: hungpham2511/toppra-dep:0.0.3

    working_directory: ~/repo

    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies3-{{ checksum "requirements3.txt" }}
      - run:
          name: install dependencies
          command: |
            python3 -m virtualenv --python python3 venv3 && . venv3/bin/activate
            pip install invoke pathlib2 numpy cython
            invoke install-solvers
            pip install -e .[dev]

      - save_cache:
          paths:
            - ./venv3
          key: v1-dependencies3-{{ checksum "requirements3.txt" }}

      - run:
          name: check codestyle
          command: |
            . venv3/bin/activate
            invoke lint || echo "allow failure"

      - store_artifacts:
          path: test-reports
          destination: test-reports

  build-python-3:
    docker:
      - image: hungpham2511/toppra-dep:0.0.3

    working_directory: ~/repo

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies3-{{ checksum "requirements3.txt" }}

      - run:
          name: install dependencies
          command: |
            virtualenv --python python3.7 venv3 && . venv3/bin/activate
            pip install invoke pathlib2 numpy cython
            invoke install-solvers
            pip install -e .[dev]

      - save_cache:
          paths:
            - ./venv3
          key: v1-dependencies3-{{ checksum "requirements3.txt" }}

      - run:
          name: test
          command: |
            . venv3/bin/activate
            mkdir test-reports
            python --version
            python -m pytest -q tests --durations=3 --junitxml=test-reports/junit.xml

      - store_test_results:
          path: test-reports

  build-cpp:
    docker:
      - image: hungpham2511/toppra-dep:0.0.3

    working_directory: ~/repo

    steps:
      - checkout
      - run:
          name: dependencies
          command: |
            sudo apt install -y curl
            echo "deb [arch=amd64] http://robotpkg.openrobots.org/packages/debian/pub $(lsb_release -sc) robotpkg" \
              | sudo tee /etc/apt/sources.list.d/robotpkg.list
            curl http://robotpkg.openrobots.org/packages/debian/robotpkg.key \
              | sudo apt-key add -
            sudo apt update
            sudo apt install -y clang-tidy libeigen3-dev robotpkg-pinocchio robotpkg-qpoases

      - run:
          name: build
          command: |
            export LD_LIBRARY_PATH=/opt/openrobots/lib:${LD_LIBRARY_PATH}
            export CMAKE_PREFIX_PATH=/opt/openrobots
            mkdir build && cd build && cmake -DBUILD_WITH_PINOCCHIO=ON -DBUILD_WITH_qpOASES=ON ..
            make -j4
          working_directory: ~/repo/cpp

      - run:
          name: test
          command: |
            ./tests/all_tests
          working_directory: ~/repo/cpp/build

  pre-release:
    docker:
      - image: buildpack-deps:trusty
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Pull all known tags and check that the tag in VERSION has not already exist.
          command: |
            VERSION=`cat VERSION`
            git fetch --tags
            git tag $VERSION

  release:
    docker:
      - image: buildpack-deps:trusty
    working_directory: ~/repo
    steps:
      - checkout
      - run:
          name: Tag code with the latest version in VERSION and push tag.
          command: |
            VERSION=`cat VERSION`
            git fetch --tags
            git tag $VERSION
            git push origin $VERSION
      - run:
          name: Publish to PyPI
          command: |
            echo "TODO"

workflows:
  version: 2
  integrate:
    jobs:
      - build-cpp
      - check-codestyle
      - build-python-3:
          requires:
            - check-codestyle

  release:
    jobs:
      - pre-release:
          filters:
            branches:
              only:
              - fix-ci
              - /release-.*/

  publish:
    jobs:
      - release:
          filters:
            branches:
              only:
              - master



